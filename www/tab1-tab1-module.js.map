{"version":3,"sources":["webpack:///./src/app/tab1/tab1.module.ts","webpack:///./src/app/tab1/tab1.page.html","webpack:///./src/app/tab1/tab1.page.scss","webpack:///./src/app/tab1/tab1.page.ts"],"names":[],"mappings":"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","file":"tab1-tab1-module.js","sourcesContent":["import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab1Page } from './tab1.page';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild([{ path: '', component: Tab1Page }])\n  ],\n  declarations: [Tab1Page]\n})\nexport class Tab1PageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>\\n      Alarma\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <ion-card class=\\\"welcome-card\\\">\\n      <ion-img src=\\\"/assets/happy-woman-sleeping-pillow.png\\\"></ion-img>\\n      <ion-card-header>\\n        <ion-card-subtitle>Empieza a dormir mejor</ion-card-subtitle>\\n        <ion-card-title>Bienvenido a PillowClock</ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <p>Escoge tu horario favorito para ir a dormir y despertar, asegurandote de que estas durmiendo lo suficiente.</p>\\n      </ion-card-content>\\n    </ion-card>\\n    <ion-list>\\n      <ion-list-header>\\n        <ion-label>Configuraci√≥n</ion-label>\\n      </ion-list-header>\\n      <ion-item>\\n        <ion-label>Alarma activada</ion-label>\\n        <ion-toggle *ngIf=\\\"config\\\" #alrmToggl [(ngModel)]=\\\"config.alarmActivated\\\" (ionChange)=\\\"switchedToggle(alrmToggl)\\\" color=\\\"primary\\\"></ion-toggle>\\n    </ion-item>\\n    </ion-list>\\n    <ion-grid fixed>\\n\\n      \\n      <ion-row>\\n        <ion-col size=\\\"6\\\">\\n          <ion-chip *ngIf=\\\"perDaySleeping\\\" color=\\\"secondary\\\">\\n              <ion-label color=\\\"success\\\">{{sleepTime}}</ion-label> \\n          </ion-chip>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col size=\\\"6\\\">\\n          <ion-row>\\n            <ion-icon name=\\\"moon\\\"></ion-icon>\\n            <ion-icon name=\\\"bed\\\"></ion-icon>\\n          </ion-row>\\n          <ion-row>\\n           Hora de dormir\\n          </ion-row>\\n          \\n          <ion-row>\\n            <ion-item>\\n              <ion-datetime #sleepTimePicker\\n              doneText=\\\"Save\\\"\\n              placeholder=\\\"sleep time\\\"\\n              [(ngModel)]=\\\"config.bedTime\\\"\\n              (ngModelChange)=\\\"onTimePickerChanged()\\\"\\n              display-format=\\\"HH:mm \\\"\\n              pickerFormat=\\\"H mm \\\"></ion-datetime>\\n            </ion-item>  \\n          </ion-row>\\n          \\n          \\n        </ion-col>\\n\\n        <ion-col size=\\\"6\\\">\\n          <ion-row>\\n            <ion-icon name=\\\"sunny\\\"></ion-icon>\\n            <ion-icon  name=\\\"body\\\"></ion-icon>\\n          </ion-row>\\n          <ion-row>\\n            Hora de despertar\\n          </ion-row>\\n          <ion-row>\\n            <ion-item>\\n              <ion-datetime #wakeTimePicker\\n              doneText=\\\"Save\\\"\\n              placeholder=\\\"wake up time\\\"\\n              [(ngModel)]=\\\"config.wakeTime\\\"\\n              (ngModelChange)=\\\"onTimePickerChanged()\\\"\\n              display-format=\\\"HH:mm \\\"\\n              pickerFormat=\\\"H mm \\\"></ion-datetime>\\n            </ion-item>\\n            \\n          </ion-row>\\n          \\n        </ion-col>\\n\\n      </ion-row>\\n\\n      \\n\\n      \\n    </ion-grid>\\n    <!-- <ion-list lines=\\\"none\\\">\\n      <ion-list-header>\\n        <ion-label>Resources</ion-label>\\n      </ion-list-header>\\n      <ion-item href=\\\"https://ionicframework.com/docs/\\\">\\n        <ion-icon slot=\\\"start\\\" color=\\\"medium\\\" name=\\\"book\\\"></ion-icon>\\n        <ion-label>Ionic Documentation</ion-label>\\n      </ion-item>\\n      <ion-item href=\\\"https://ionicframework.com/docs/building/scaffolding\\\">\\n        <ion-icon slot=\\\"start\\\" color=\\\"medium\\\" name=\\\"build\\\"></ion-icon>\\n        <ion-label>Scaffold Out Your App</ion-label>\\n      </ion-item>\\n      <ion-item href=\\\"https://ionicframework.com/docs/layout/structure\\\">\\n        <ion-icon slot=\\\"start\\\" color=\\\"medium\\\" name=\\\"grid\\\"></ion-icon>\\n        <ion-label>Change Your App Layout</ion-label>\\n      </ion-item>\\n      <ion-item href=\\\"https://ionicframework.com/docs/theming/basics\\\">\\n        <ion-icon slot=\\\"start\\\" color=\\\"medium\\\" name=\\\"color-fill\\\"></ion-icon>\\n        <ion-label>Theme Your App</ion-label>\\n      </ion-item>\\n    </ion-list> -->\\n</ion-content>\\n\"","module.exports = \".welcome-card ion-img {\\n  max-height: 35vh;\\n  overflow: hidden; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9wYXVsamltZW5lei9Eb2N1bWVudHMvRW1wcmVuZGVkb3Jlcy9QaWxsb3dDbG9jay9waWxsb0Nsb2NrL3NyYy9hcHAvdGFiMS90YWIxLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtFQUNoQixnQkFBZ0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3RhYjEvdGFiMS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIud2VsY29tZS1jYXJkIGlvbi1pbWcge1xuICBtYXgtaGVpZ2h0OiAzNXZoO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuIl19 */\"","import { Component, ViewChild, OnInit  } from '@angular/core';\nimport { IonDatetime, IonRange, IonLabel, IonToggle } from '@ionic/angular';\nimport { Time } from '@angular/common';\nimport { ConfigService, IConfig } from '../services/config.service';\n\n\ninterface ITickSpan {\n  lower: number;\n  upper: number;\n}\n\n@Component({\n  selector: 'app-tab1',\n  templateUrl: 'tab1.page.html',\n  styleUrls: ['tab1.page.scss']\n})\n\nexport class Tab1Page implements OnInit {\n\n  @ViewChild('wakeTimePicker') wakePicker: IonDatetime;\n  @ViewChild('sleepTimePicker') sleepPicker: IonDatetime;\n  @ViewChild('totalSleep') totalSleepLabel: IonLabel;\n\n  config: IConfig;\n\n  private perDaySleeping: Time = {'hours': 8, 'minutes': 0};\n  private sleepTime = '';\n  constructor(private configurationService: ConfigService) {\n    // this.sleepTime =  new Date().toISOString();\n    console.log('tab1 started');\n    console.log(configurationService);\n    this.config =  this.configurationService.getConfig();\n  }\n  ngOnInit() {\n\n\n    this.sleepPicker.minuteValues = '0,5,10,15,20,25,30,35,40,45,50,55';\n    this.wakePicker.minuteValues = this.sleepPicker.minuteValues;\n\n    if (!this.config) {\n\n    const defaultBedTime = new Date();\n    defaultBedTime.setHours(21);\n    defaultBedTime.setMinutes(30);\n    const defaultWakeTime = new Date();\n    defaultWakeTime.setHours(7);\n    defaultWakeTime.setMinutes(30);\n\n      this.config = {\n        alarmActivated: true,\n        bedTime: defaultBedTime.toISOString(),\n        wakeTime: defaultWakeTime.toISOString(),\n        lightActivated: true,\n        lightAnticipation: 25\n      };\n      this.configurationService.setConfig(this.config);\n    }\n\n\n    this.sleepTime = this.getElapsedTimeString();\n\n  }\n\n  onKnobFocus() {\n    console.log('will move');\n\n  }\n  switchedToggle(t: IonToggle) {\n    this.configurationService.saveOnLocalStorage();\n  }\n  onTimePickerChanged() {\n    console.log('timer picker changed');\n    console.log(`BedTime: ${this.getMinutesElapsed(this.sleepPicker.value)}`);\n    console.log(`WakeTime: ${this.getMinutesElapsed(this.wakePicker.value)}`);\n    this.sleepTime = this.getElapsedTimeString();\n    this.configurationService.saveOnLocalStorage();\n  }\n  getElapsedTimeString(): string {\n\n    const bedMinutes: number = this.getMinutesElapsed(this.config.bedTime);\n    const wakeMinutes: number = this.getMinutesElapsed(this.config.wakeTime);\n\n    let minuteSpan: number;\n    if (bedMinutes <= 720 && wakeMinutes <= 720) { //sleeping during morning\n      minuteSpan = wakeMinutes - bedMinutes;\n    } else if (bedMinutes > 720 && wakeMinutes > 720) { // sleeping afternoon \n      minuteSpan = wakeMinutes - bedMinutes;\n    } else if (bedMinutes <= 720 && wakeMinutes > 720) {//sleeping morning-afternoon\n      minuteSpan = (720 - bedMinutes) + (wakeMinutes - 720);\n    } else if (bedMinutes > 720 && wakeMinutes <= 720) {//sleeping afternoon-morning\n      minuteSpan = (1440 - bedMinutes) + wakeMinutes;\n    }\n\n    const hrs = Math.trunc(minuteSpan / 60 );\n    const mins = minuteSpan % 60;\n\n    return `${hrs} hrs ${mins} mins`;\n\n  }\n  getMinutesElapsed(isoDateString: string): number {\n    const dte = new Date(isoDateString);\n    const hrs = dte.getHours();\n    const mins = dte.getMinutes();\n    const totalMins = hrs * 60 + mins;\n    return totalMins;\n  }\n  getIsoDate(sliderVal: number): string {\n    const sliderValInMinutes = (5 * (sliderVal));// + 12 * 60;\n    const hours =  Math.trunc((sliderValInMinutes) / 60) ;\n    const minutes = (sliderValInMinutes  % 60) ;\n    const newSleepTime = new Date();\n    newSleepTime.setHours(hours);\n    newSleepTime.setMinutes(minutes);\n\n    return newSleepTime.toISOString();\n  }\n\n}\n"],"sourceRoot":""}